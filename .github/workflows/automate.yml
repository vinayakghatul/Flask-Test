name: Deploy to Amazon ECS

on:
    push:
        branches:
            - master


env:
    AWS_REGION: us-east-1
    ECR_REPOSITORY: flask_app #this is the repo name that I created first time   
    ECS_SERVICE: flask_new_service_one  #name of the service I have created
    ECS_CLUSTER: flask_app_service
    ECS_TASK_DEFINATION: task-defination.json
    CONTAINER_NAME: scalertest


jobs:
    job1:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Install Python 3
              uses: actions/setup-python@v1
              with:
                python-version: 3.9
            - name: Install dependencies
              run:
                python -m pip install --upgrade pip
                pip install pytest
                pip install -r requirements.txt
            - name: Run tests with pytest
              run: pytest
    job2:
        needs: job1
        runs-on: ubuntu-latest
        environment: production

        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v1
              with: 
                aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
                aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}  
                aws-region: ${{env.AWS_REGION}}
            - name: Login to ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1
            - name: Build, tag, and push image to the Amazon ECR
              id: build-image
              env: 
                ECR_REGISTRY: ${{steps.login-ecr.outputs.registry}}
                IMAGE_TAG: ${{github.sha}}
              run: 
                docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
                docker push $ECR_REGISTRY/ECR_REPOSITORY:$IMAGE_TAG
                echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG">> $GITHUB_OUTPUT #this step is copying image
            - name: fill in the new image id in the Amazon ECS task definition
              id: task-def
              uses: aws-actions/amazon-ecs-render-task-definition@v1
              with:
                task-definition: ${{env.ECS_TASK_DEFINITION}}
                container-name: ${{env.CONTAINER_NAME}}
                image: ${{steps.build-image.outputs.image}}
            - name: Run the ECS task
              uses: aws-actions/amazon-ecs-deploy-task-definition@v1
              with:
                task-definition: ${{steps.task-def.outputs.task-definition}}
                service: ${{env.ECS_SERVICE}}
                cluster: ${{env.ECS_CLUSTER}}
                wait-for-service-stability: true

